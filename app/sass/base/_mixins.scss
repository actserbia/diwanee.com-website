@mixin transition($value){
  -moz-transition:#{$value};
  -o-transition:#{$value};
  -ms-transition:#{$value};
  -webkit-transition:#{$value};
  transition:#{$value};
}
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  #{$property}: $value;
}
$cubic-bezier1 : 'cubic-bezier(0,1,1,1)';

$decelerationCurve : 'cubic-bezier(0.0, 0.0, 0.2, 1)';
$accelerationCurve : 'cubic-bezier(0.4, 0.0, 1, 1)';
$sharpCurve : 'cubic-bezier(0.4, 0.0, 0.6, 1)';
$standardCurve : 'cubic-bezier(0.4, 0.0, 0.2, 1)';

@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}
@mixin lineHeight($size) {
  line-height: $size; //Fallback in px
  line-height: calculateRem($size);
}
// @mixin fhSettings($page, $color, $image){
//   #{$page} {
//     background: green;
//     .b-fluid-header {
//       background-image:url(../../assets/img/$image);
//     }
//     // .b-fluid-header__circle {
//     //   fill:$color;
//     // }
//   }
// }
@mixin transformTranslate($x, $y) {
  transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -webkit-ransform: translate($x, $y);
  -o-transform: translate($x, $y);
}
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transformTranslate(-50%, -50%);
}
@mixin centerOff {
  position: relative;
  top: auto;
  left: auto;
  @include transformTranslate(0, 0);
}
